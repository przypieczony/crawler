import requests
from bs4 import BeautifulSoup
import re

def getAlltext(address):
    #This function should be moved to WebPage class
    '''
    input: address of existing website
    
    output: list containing whole raw text found between tags chosen as "text_tags" argument
    '''
    html = requests.get(address)
    print("Get text: ",address)
    soup = BeautifulSoup(html.content, "html.parser")
    text_list = []
    text_tags = ('p')    # add html tags that contains text you want to download, 
                                # type each tag as string, dont use comma signs
    for tag in text_tags:
        for text in soup.findAll(tag):
            text_list.append(text.get_text())
    return text_list

def splitToWord(text_list):
    '''
    input: list generated by "getAlltext" function
    
    output: splits each word from the text apart and raturns as list
    '''
    words = []
    for text in text_list:
        for word in text.split(" "):
            words.append(word)
    return words

def standarizeWords(words_list):
    '''
    input: list [strings]
    
        deletes all the string containing a number,
        removes any punctuation from each string,
    
    output: list [strings]
    '''
    new_word_list = []
    numbers = ["0","1","2","3","4","5","6","7","8","9"]
    p = re.compile("(\.|\!|\,|\?|\:|\;|\)|\(|\\|\/|\'|\")")
    for word in words_list:
        is_word = True
        word = p.sub(" ", word)
        word = word.lower()
        for number in numbers:
            if number in word:
                is_word = False
                break
        if is_word == True:
            new_word_list.append(word)
        new_word_list.sort()
    return new_word_list

def countWords(words_list):
    '''
    input: list [strings]
            
        counts number of appearances of each word in the list
    
    output: dictionary { word : count of appearances }
    '''
    words_count = {}
    for word in words_list:
        if word in words_count:
            words_count[word] += 1
        else:
            words_count[word] = 1        
    return words_count

def top5words(countWords_dict):
    '''
    input: dictionary genereted by "countWords" function
    
    output: list of 5 keys(words) with biggest value
    
    NOT FULLY FUNCTIONAL
    '''
    top_num = 1
    top_word = ""
    keys = countWords_dict.keys()
    for key in keys:
        if len(key) > 3 and key != 'the':  # banned words    
            if countWords_dict[key] > top_num:
                top_num = countWords_dict[key]
                top_word = key
    return top_word

def collect_words(address):
    '''
    input: address of existing website
    
    returns tuple (domain name, dictionary { words on site : number of appearences }) 
    '''
    words = standarizeWords(splitToWord(getAlltext(address)))

    return words